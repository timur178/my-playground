# kafka-gitops/01-operators/argocd-image-updater.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-image-updater
  namespace: argocd
  annotations:
    eks.amazonaws.com/role-arn: ${IMGUPD_IRSA_ROLE_ARN}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-image-updater-config
  namespace: argocd
data:
  log.level: info
  registries.conf: |
    registries:
    - name: aws-ecr
      api_url: https://${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
      prefix:  ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
      default: true
      credentials: aws
      aws:
        region: ${AWS_REGION}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-image-updater
  namespace: argocd
spec:
  replicas: 1
  selector: { matchLabels: { app.kubernetes.io/name: argocd-image-updater } }
  template:
    metadata:
      labels: { app.kubernetes.io/name: argocd-image-updater }
    spec:
      serviceAccountName: argocd-image-updater
      containers:
      - name: updater
        image: ghcr.io/argoproj-labs/argocd-image-updater:v0.13.4
        imagePullPolicy: IfNotPresent
        env:
          - { name: ARGOCD_SERVER,  value: "argocd-server:443" }
          - { name: ARGOCD_GRPC_WEB, value: "true" }
          - { name: ARGOCD_INSECURE, value: "true" }
          - name: ARGOCD_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: argocd-image-updater-secret
                key: argocd.token
          - { name: AWS_REGION, value: "${AWS_REGION}" }
        args: ["run", "--interval=1m"]
