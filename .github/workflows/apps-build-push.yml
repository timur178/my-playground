# .github/workflows/apps-build-push.yaml
name: apps-build-push
on:
  push:
    paths:
      - "producer.py"
      - "consumer_api.py"
      - "dashboard.py"
      - "kafka-helm/**"
      - ".github/workflows/apps-build-push.yaml"
  workflow_dispatch: {}

env:
  ECR_REGISTRY: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com
  ECR_REPO_PREFIX: ${{ vars.ECR_REPO_PREFIX }}
  # ECR_REPO_PREFIX: ${{ vars.TEAM }}/${{ vars.ENVIRONMENT_STAGE }}

jobs:
  docker-build:
    environment: ${{ (github.ref == 'refs/heads/main' && 'production') || (github.ref == 'refs/heads/staging' && 'staging') || 'dev' }}
    runs-on: ubuntu-latest
    permissions: { id-token: write, contents: read }
    strategy:
      matrix:
        app:
          - name: kafka-producer
            dir: .
            dockerfile: Dockerfile.producer
            repo: kafka-producer
            values: kafka-helm/values/producer-dev.yaml
          - name: kafka-consumer
            dir: .
            dockerfile: Dockerfile.consumer
            repo: kafka-consumer
            values: kafka-helm/values/consumer-dev.yaml
          - name: kafka-dashboard
            dir: .
            dockerfile: Dockerfile.dashboard
            repo: kafka-dashboard
            values: kafka-helm/values/dashboard-dev.yaml

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Compute short SHA
        id: short
        run: echo "sha7=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Compute repo path
        id: repo
        shell: sh
        run: |
          prefix='${{ env.ECR_REPO_PREFIX }}'
          repo='${{ matrix.app.repo }}'
          if [ -n "$prefix" ]; then
            echo "name=${prefix}/${repo}" >> "$GITHUB_OUTPUT"
          else
            echo "name=${repo}" >> "$GITHUB_OUTPUT"
          fi

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.app.dir }}
          file: ${{ matrix.app.dockerfile }}
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ steps.repo.outputs.name }}:${{ steps.short.outputs.sha7 }}
            ${{ env.ECR_REGISTRY }}/${{ steps.repo.outputs.name }}:latest

