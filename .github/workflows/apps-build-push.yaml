# name: apps-build-push
# on:
#   push:
#     paths:
#       - "producer.py"
#       - "consumer_api.py"
#       - "dashboard.py"
#       - "kafka-helm/**"
#       - ".github/workflows/apps-build-push.yaml"
#   workflow_dispatch: {}

# env:
#   AWS_REGION: ${{ vars.AWS_REGION }}
#   AWS_ROLE_ARN: ${{ vars.AWS_OIDC_ROLE_ARN }}
#   ECR_REGISTRY: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com
#   TEAM: ${{ vars.TEAM }}
#   TEAM_DOMAIN: ${{ vars.TEAM_DOMAIN }}
#   ENVIRONMENT_STAGE: ${{ vars.ENVIRONMENT_STAGE }}

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write
#       contents: write
#     strategy:
#       matrix:
#         app:
#           - name: kafka-producer
#             dir: .
#             dockerfile: Dockerfile.producer
#             repo: kafka-producer
#             values: kafka-helm/values/producer-dev.yaml
#           - name: kafka-consumer
#             dir: .
#             dockerfile: Dockerfile.consumer
#             repo: kafka-consumer
#             values: kafka-helm/values/consumer-dev.yaml
#           - name: kafka-dashboard
#             dir: .
#             dockerfile: Dockerfile.dashboard
#             repo: kafka-dashboard
#             values: kafka-helm/values/dashboard-dev.yaml
#     steps:
#       - uses: actions/checkout@v4

#       - uses: aws-actions/configure-aws-credentials@v4
#         with:
#           role-to-assume: ${{ env.AWS_ROLE_ARN }}
#           aws-region: ${{ env.AWS_REGION }}

#       - uses: aws-actions/amazon-ecr-login@v2

#       - name: Build & push
#         uses: docker/build-push-action@v6
#         with:
#           context: ${{ matrix.app.dir }}
#           file: ${{ matrix.app.dockerfile }}
#           push: true
#           tags: |
#             ${{ env.ECR_REGISTRY }}/${{ matrix.app.repo }}:${{ github.sha }}
#             ${{ env.ECR_REGISTRY }}/${{ matrix.app.repo }}:latest

#       - name: Bump image tag in values
#         run: |
#           sudo apt-get update && sudo apt-get install -y jq yq
#           yq -i '.image.repository = env(ECR_REGISTRY) + "/${{ matrix.app.repo }}"' ${{ matrix.app.values }}
#           yq -i '.image.tag = env(GITHUB_SHA)' ${{ matrix.app.values }}

#       - name: Commit GitOps value update
#         run: |
#           git config user.name "ci-bot"
#           git config user.email "ci@example.com"
#           git add ${{ matrix.app.values }}
#           git commit -m "ci: bump ${{ matrix.app.name }} image to ${GITHUB_SHA}" || echo "No changes"
#           git push
