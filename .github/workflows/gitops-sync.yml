name: GitOps Bootstrap & Sync

on:
  workflow_dispatch: {}
  push:
    branches: [ feature/battlefield ]
    paths:
      - "gitops/**"
      - ".github/workflows/gitops-sync.yml"
      - "!gitops/apps/40-apps/**"   # (app images roll via Image Updater; optional to exclude)

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION:        ${{ vars.AWS_REGION }}
  AWS_OIDC_ROLE_ARN: ${{ vars.AWS_OIDC_ROLE_ARN }}
  EKS_CLUSTER_NAME:  ${{ vars.EKS_CLUSTER_NAME }}

jobs:
  sync:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set kubeconfig for EKS
        run: aws eks update-kubeconfig --name "$EKS_CLUSTER_NAME" --region "$AWS_REGION"

      - name: Create/Update App-of-Apps
        run: |
          kubectl -n argocd apply -f gitops/argocd/app-of-apps.yaml
          # Ask Argo CD to rescan the tree (no CLI needed)
          kubectl -n argocd patch application kafka-platform \
            --type merge -p '{"metadata":{"annotations":{"argocd.argoproj.io/refresh":"hard"}}}' || true

      - name: Show Argo CD apps
        run: kubectl -n argocd get applications -o wide

